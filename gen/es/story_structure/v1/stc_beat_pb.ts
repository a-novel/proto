// @generated by protoc-gen-es v2.2.0 with parameter "target=ts"
// @generated from file story_structure/v1/stc_beat.proto (package story_structure.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file story_structure/v1/stc_beat.proto.
 */
export const file_story_structure_v1_stc_beat: GenFile = /*@__PURE__*/
  fileDesc("CiFzdG9yeV9zdHJ1Y3R1cmUvdjEvc3RjX2JlYXQucHJvdG8SEnN0b3J5X3N0cnVjdHVyZS52MSIcCg5HZXRCZWF0UmVxdWVzdBIKCgJpZBgBIAEoCSIfChBMaXN0QmVhdHNSZXF1ZXN0EgsKA2lkcxgBIAMoCSIzChJTZWFyY2hCZWF0c1JlcXVlc3QSDQoFbGltaXQYASABKAUSDgoGb2Zmc2V0GAIgASgFIjEKEUNyZWF0ZUJlYXRSZXF1ZXN0EgwKBG5hbWUYASABKAkSDgoGcHJvbXB0GAIgASgJIj0KEVVwZGF0ZUJlYXRSZXF1ZXN0EgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSDgoGcHJvbXB0GAMgASgJIh8KEURlbGV0ZUJlYXRSZXF1ZXN0EgoKAmlkGAEgASgJIjkKD0dldEJlYXRSZXNwb25zZRImCgRiZWF0GAEgASgLMhguc3Rvcnlfc3RydWN0dXJlLnYxLkJlYXQiPAoRTGlzdEJlYXRzUmVzcG9uc2USJwoFYmVhdHMYASADKAsyGC5zdG9yeV9zdHJ1Y3R1cmUudjEuQmVhdCIiChNTZWFyY2hCZWF0c1Jlc3BvbnNlEgsKA2lkcxgBIAMoCSI8ChJDcmVhdGVCZWF0UmVzcG9uc2USJgoEYmVhdBgBIAEoCzIYLnN0b3J5X3N0cnVjdHVyZS52MS5CZWF0IjwKElVwZGF0ZUJlYXRSZXNwb25zZRImCgRiZWF0GAEgASgLMhguc3Rvcnlfc3RydWN0dXJlLnYxLkJlYXQiMAoEQmVhdBIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEg4KBnByb21wdBgDIAEoCTKuBAoLQmVhdFNlcnZpY2USVAoHR2V0QmVhdBIiLnN0b3J5X3N0cnVjdHVyZS52MS5HZXRCZWF0UmVxdWVzdBojLnN0b3J5X3N0cnVjdHVyZS52MS5HZXRCZWF0UmVzcG9uc2UiABJaCglMaXN0QmVhdHMSJC5zdG9yeV9zdHJ1Y3R1cmUudjEuTGlzdEJlYXRzUmVxdWVzdBolLnN0b3J5X3N0cnVjdHVyZS52MS5MaXN0QmVhdHNSZXNwb25zZSIAEmAKC1NlYXJjaEJlYXRzEiYuc3Rvcnlfc3RydWN0dXJlLnYxLlNlYXJjaEJlYXRzUmVxdWVzdBonLnN0b3J5X3N0cnVjdHVyZS52MS5TZWFyY2hCZWF0c1Jlc3BvbnNlIgASXQoKQ3JlYXRlQmVhdBIlLnN0b3J5X3N0cnVjdHVyZS52MS5DcmVhdGVCZWF0UmVxdWVzdBomLnN0b3J5X3N0cnVjdHVyZS52MS5DcmVhdGVCZWF0UmVzcG9uc2UiABJdCgpVcGRhdGVCZWF0EiUuc3Rvcnlfc3RydWN0dXJlLnYxLlVwZGF0ZUJlYXRSZXF1ZXN0GiYuc3Rvcnlfc3RydWN0dXJlLnYxLlVwZGF0ZUJlYXRSZXNwb25zZSIAEk0KCkRlbGV0ZUJlYXQSJS5zdG9yeV9zdHJ1Y3R1cmUudjEuRGVsZXRlQmVhdFJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiAEJFWkNnaXRodWIuY29tL2Etbm92ZWwvcHJvdG8vZ2VuL2dvL3N0b3J5X3N0cnVjdHVyZS92MTtzdG9yeXN0cnVjdHVyZXBiYgZwcm90bzM", [file_google_protobuf_empty]);

/**
 * @generated from message story_structure.v1.GetBeatRequest
 */
export type GetBeatRequest = Message<"story_structure.v1.GetBeatRequest"> & {
  /**
   * The id of the beat to retrieve.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message story_structure.v1.GetBeatRequest.
 * Use `create(GetBeatRequestSchema)` to create a new message.
 */
export const GetBeatRequestSchema: GenMessage<GetBeatRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat, 0);

/**
 * @generated from message story_structure.v1.ListBeatsRequest
 */
export type ListBeatsRequest = Message<"story_structure.v1.ListBeatsRequest"> & {
  /**
   * The ids of the beats to retrieve. A maximum number of ids that can be provided in one request may be
   * defined by the server.
   *
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];
};

/**
 * Describes the message story_structure.v1.ListBeatsRequest.
 * Use `create(ListBeatsRequestSchema)` to create a new message.
 */
export const ListBeatsRequestSchema: GenMessage<ListBeatsRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat, 1);

/**
 * @generated from message story_structure.v1.SearchBeatsRequest
 */
export type SearchBeatsRequest = Message<"story_structure.v1.SearchBeatsRequest"> & {
  /**
   * Batch size for the search. The server may cap this value.
   *
   * @generated from field: int32 limit = 1;
   */
  limit: number;

  /**
   * Offset for the search. The server may cap this value.
   *
   * @generated from field: int32 offset = 2;
   */
  offset: number;
};

/**
 * Describes the message story_structure.v1.SearchBeatsRequest.
 * Use `create(SearchBeatsRequestSchema)` to create a new message.
 */
export const SearchBeatsRequestSchema: GenMessage<SearchBeatsRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat, 2);

/**
 * @generated from message story_structure.v1.CreateBeatRequest
 */
export type CreateBeatRequest = Message<"story_structure.v1.CreateBeatRequest"> & {
  /**
   * The name of the beat to create. While not required to be unique, it is recommended to be, so it is not
   * confused with other beats.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The main prompt that should be used to generate a story with this beat.
   *
   * @generated from field: string prompt = 2;
   */
  prompt: string;
};

/**
 * Describes the message story_structure.v1.CreateBeatRequest.
 * Use `create(CreateBeatRequestSchema)` to create a new message.
 */
export const CreateBeatRequestSchema: GenMessage<CreateBeatRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat, 3);

/**
 * @generated from message story_structure.v1.UpdateBeatRequest
 */
export type UpdateBeatRequest = Message<"story_structure.v1.UpdateBeatRequest"> & {
  /**
   * The ID of the existing beat to update.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The name of the beat to create. While not required to be unique, it is recommended to be, so it is not
   * confused with other beats.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The main prompt that should be used to generate a story with this beat.
   *
   * @generated from field: string prompt = 3;
   */
  prompt: string;
};

/**
 * Describes the message story_structure.v1.UpdateBeatRequest.
 * Use `create(UpdateBeatRequestSchema)` to create a new message.
 */
export const UpdateBeatRequestSchema: GenMessage<UpdateBeatRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat, 4);

/**
 * @generated from message story_structure.v1.DeleteBeatRequest
 */
export type DeleteBeatRequest = Message<"story_structure.v1.DeleteBeatRequest"> & {
  /**
   * The ID of the beat to delete.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message story_structure.v1.DeleteBeatRequest.
 * Use `create(DeleteBeatRequestSchema)` to create a new message.
 */
export const DeleteBeatRequestSchema: GenMessage<DeleteBeatRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat, 5);

/**
 * @generated from message story_structure.v1.GetBeatResponse
 */
export type GetBeatResponse = Message<"story_structure.v1.GetBeatResponse"> & {
  /**
   * The beat that was retrieved.
   *
   * @generated from field: story_structure.v1.Beat beat = 1;
   */
  beat?: Beat;
};

/**
 * Describes the message story_structure.v1.GetBeatResponse.
 * Use `create(GetBeatResponseSchema)` to create a new message.
 */
export const GetBeatResponseSchema: GenMessage<GetBeatResponse> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat, 6);

/**
 * @generated from message story_structure.v1.ListBeatsResponse
 */
export type ListBeatsResponse = Message<"story_structure.v1.ListBeatsResponse"> & {
  /**
   * The beats that were retrieved.
   *
   * @generated from field: repeated story_structure.v1.Beat beats = 1;
   */
  beats: Beat[];
};

/**
 * Describes the message story_structure.v1.ListBeatsResponse.
 * Use `create(ListBeatsResponseSchema)` to create a new message.
 */
export const ListBeatsResponseSchema: GenMessage<ListBeatsResponse> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat, 7);

/**
 * @generated from message story_structure.v1.SearchBeatsResponse
 */
export type SearchBeatsResponse = Message<"story_structure.v1.SearchBeatsResponse"> & {
  /**
   * The ids of the beats matching the search. Details for each beat can be retrieved using ListBeats,
   * or separately using GetBeat.
   *
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];
};

/**
 * Describes the message story_structure.v1.SearchBeatsResponse.
 * Use `create(SearchBeatsResponseSchema)` to create a new message.
 */
export const SearchBeatsResponseSchema: GenMessage<SearchBeatsResponse> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat, 8);

/**
 * @generated from message story_structure.v1.CreateBeatResponse
 */
export type CreateBeatResponse = Message<"story_structure.v1.CreateBeatResponse"> & {
  /**
   * The beat that was created.
   *
   * @generated from field: story_structure.v1.Beat beat = 1;
   */
  beat?: Beat;
};

/**
 * Describes the message story_structure.v1.CreateBeatResponse.
 * Use `create(CreateBeatResponseSchema)` to create a new message.
 */
export const CreateBeatResponseSchema: GenMessage<CreateBeatResponse> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat, 9);

/**
 * @generated from message story_structure.v1.UpdateBeatResponse
 */
export type UpdateBeatResponse = Message<"story_structure.v1.UpdateBeatResponse"> & {
  /**
   * The beat that was updated.
   *
   * @generated from field: story_structure.v1.Beat beat = 1;
   */
  beat?: Beat;
};

/**
 * Describes the message story_structure.v1.UpdateBeatResponse.
 * Use `create(UpdateBeatResponseSchema)` to create a new message.
 */
export const UpdateBeatResponseSchema: GenMessage<UpdateBeatResponse> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat, 10);

/**
 * @generated from message story_structure.v1.Beat
 */
export type Beat = Message<"story_structure.v1.Beat"> & {
  /**
   * The unique identifier of the beat.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * THe display name of the beat.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The prompt that should be used to generate a story with this beat.
   *
   * @generated from field: string prompt = 3;
   */
  prompt: string;
};

/**
 * Describes the message story_structure.v1.Beat.
 * Use `create(BeatSchema)` to create a new message.
 */
export const BeatSchema: GenMessage<Beat> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat, 11);

/**
 * @generated from service story_structure.v1.BeatService
 */
export const BeatService: GenService<{
  /**
   * Get a specific beat details.
   *
   * @generated from rpc story_structure.v1.BeatService.GetBeat
   */
  getBeat: {
    methodKind: "unary";
    input: typeof GetBeatRequestSchema;
    output: typeof GetBeatResponseSchema;
  },
  /**
   * Return a list of beats, based on a list of IDs provided.
   *
   * @generated from rpc story_structure.v1.BeatService.ListBeats
   */
  listBeats: {
    methodKind: "unary";
    input: typeof ListBeatsRequestSchema;
    output: typeof ListBeatsResponseSchema;
  },
  /**
   * Return a list of beat ids, based on a search query. You can then use ListBeats to retrieve
   * the specific details of each beat.
   *
   * @generated from rpc story_structure.v1.BeatService.SearchBeats
   */
  searchBeats: {
    methodKind: "unary";
    input: typeof SearchBeatsRequestSchema;
    output: typeof SearchBeatsResponseSchema;
  },
  /**
   * Create a new beat.
   *
   * @generated from rpc story_structure.v1.BeatService.CreateBeat
   */
  createBeat: {
    methodKind: "unary";
    input: typeof CreateBeatRequestSchema;
    output: typeof CreateBeatResponseSchema;
  },
  /**
   * Update an existing beat.
   *
   * @generated from rpc story_structure.v1.BeatService.UpdateBeat
   */
  updateBeat: {
    methodKind: "unary";
    input: typeof UpdateBeatRequestSchema;
    output: typeof UpdateBeatResponseSchema;
  },
  /**
   * Delete an existing beat. This method should not fail if the beat does not exist.
   *
   * @generated from rpc story_structure.v1.BeatService.DeleteBeat
   */
  deleteBeat: {
    methodKind: "unary";
    input: typeof DeleteBeatRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_story_structure_v1_stc_beat, 0);

