// @generated by protoc-gen-es v2.2.0 with parameter "target=ts"
// @generated from file story_structure/v1/stc_beat_to_plot_point.proto (package story_structure.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file story_structure/v1/stc_beat_to_plot_point.proto.
 */
export const file_story_structure_v1_stc_beat_to_plot_point: GenFile = /*@__PURE__*/
  fileDesc("Ci9zdG9yeV9zdHJ1Y3R1cmUvdjEvc3RjX2JlYXRfdG9fcGxvdF9wb2ludC5wcm90bxISc3Rvcnlfc3RydWN0dXJlLnYxIjQKG0xpc3RCZWF0c0J5UGxvdFBvaW50UmVxdWVzdBIVCg1wbG90X3BvaW50X2lkGAEgASgJIi8KHExpc3RQbG90UG9pbnRzQnlCZWF0c1JlcXVlc3QSDwoHYmVhdF9pZBgBIAEoCSJFChtMaW5rQmVhdEFuZFBsb3RQb2ludFJlcXVlc3QSDwoHYmVhdF9pZBgBIAEoCRIVCg1wbG90X3BvaW50X2lkGAIgASgJIkcKHVVubGlua0JlYXRBbmRQbG90UG9pbnRSZXF1ZXN0Eg8KB2JlYXRfaWQYASABKAkSFQoNcGxvdF9wb2ludF9pZBgCIAEoCSIwChxMaXN0QmVhdHNCeVBsb3RQb2ludFJlc3BvbnNlEhAKCGJlYXRfaWRzGAEgAygJIjcKHUxpc3RQbG90UG9pbnRzQnlCZWF0c1Jlc3BvbnNlEhYKDnBsb3RfcG9pbnRfaWRzGAEgAygJMt8DChZCZWF0VG9QbG90UG9pbnRTZXJ2aWNlEnsKFExpc3RCZWF0c0J5UGxvdFBvaW50Ei8uc3Rvcnlfc3RydWN0dXJlLnYxLkxpc3RCZWF0c0J5UGxvdFBvaW50UmVxdWVzdBowLnN0b3J5X3N0cnVjdHVyZS52MS5MaXN0QmVhdHNCeVBsb3RQb2ludFJlc3BvbnNlIgASfgoVTGlzdFBsb3RQb2ludHNCeUJlYXRzEjAuc3Rvcnlfc3RydWN0dXJlLnYxLkxpc3RQbG90UG9pbnRzQnlCZWF0c1JlcXVlc3QaMS5zdG9yeV9zdHJ1Y3R1cmUudjEuTGlzdFBsb3RQb2ludHNCeUJlYXRzUmVzcG9uc2UiABJhChRMaW5rQmVhdEFuZFBsb3RQb2ludBIvLnN0b3J5X3N0cnVjdHVyZS52MS5MaW5rQmVhdEFuZFBsb3RQb2ludFJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJlChZVbmxpbmtCZWF0QW5kUGxvdFBvaW50EjEuc3Rvcnlfc3RydWN0dXJlLnYxLlVubGlua0JlYXRBbmRQbG90UG9pbnRSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgBCRVpDZ2l0aHViLmNvbS9hLW5vdmVsL3Byb3RvL2dlbi9nby9zdG9yeV9zdHJ1Y3R1cmUvdjE7c3RvcnlzdHJ1Y3R1cmVwYmIGcHJvdG8z", [file_google_protobuf_empty]);

/**
 * @generated from message story_structure.v1.ListBeatsByPlotPointRequest
 */
export type ListBeatsByPlotPointRequest = Message<"story_structure.v1.ListBeatsByPlotPointRequest"> & {
  /**
   * The id of the plot point to retrieve the beats from.
   *
   * @generated from field: string plot_point_id = 1;
   */
  plotPointId: string;
};

/**
 * Describes the message story_structure.v1.ListBeatsByPlotPointRequest.
 * Use `create(ListBeatsByPlotPointRequestSchema)` to create a new message.
 */
export const ListBeatsByPlotPointRequestSchema: GenMessage<ListBeatsByPlotPointRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat_to_plot_point, 0);

/**
 * @generated from message story_structure.v1.ListPlotPointsByBeatsRequest
 */
export type ListPlotPointsByBeatsRequest = Message<"story_structure.v1.ListPlotPointsByBeatsRequest"> & {
  /**
   * The id of the beat to retrieve the plot points from.
   *
   * @generated from field: string beat_id = 1;
   */
  beatId: string;
};

/**
 * Describes the message story_structure.v1.ListPlotPointsByBeatsRequest.
 * Use `create(ListPlotPointsByBeatsRequestSchema)` to create a new message.
 */
export const ListPlotPointsByBeatsRequestSchema: GenMessage<ListPlotPointsByBeatsRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat_to_plot_point, 1);

/**
 * @generated from message story_structure.v1.LinkBeatAndPlotPointRequest
 */
export type LinkBeatAndPlotPointRequest = Message<"story_structure.v1.LinkBeatAndPlotPointRequest"> & {
  /**
   * The id of the beat to link to the plot point.
   *
   * @generated from field: string beat_id = 1;
   */
  beatId: string;

  /**
   * The id of the plot point to link the beat to.
   *
   * @generated from field: string plot_point_id = 2;
   */
  plotPointId: string;
};

/**
 * Describes the message story_structure.v1.LinkBeatAndPlotPointRequest.
 * Use `create(LinkBeatAndPlotPointRequestSchema)` to create a new message.
 */
export const LinkBeatAndPlotPointRequestSchema: GenMessage<LinkBeatAndPlotPointRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat_to_plot_point, 2);

/**
 * @generated from message story_structure.v1.UnlinkBeatAndPlotPointRequest
 */
export type UnlinkBeatAndPlotPointRequest = Message<"story_structure.v1.UnlinkBeatAndPlotPointRequest"> & {
  /**
   * The id of the beat to unlink from the plot point.
   *
   * @generated from field: string beat_id = 1;
   */
  beatId: string;

  /**
   * The id of the plot point to unlink the beat from.
   *
   * @generated from field: string plot_point_id = 2;
   */
  plotPointId: string;
};

/**
 * Describes the message story_structure.v1.UnlinkBeatAndPlotPointRequest.
 * Use `create(UnlinkBeatAndPlotPointRequestSchema)` to create a new message.
 */
export const UnlinkBeatAndPlotPointRequestSchema: GenMessage<UnlinkBeatAndPlotPointRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat_to_plot_point, 3);

/**
 * @generated from message story_structure.v1.ListBeatsByPlotPointResponse
 */
export type ListBeatsByPlotPointResponse = Message<"story_structure.v1.ListBeatsByPlotPointResponse"> & {
  /**
   * The ids of the beats related to the plot point.
   *
   * @generated from field: repeated string beat_ids = 1;
   */
  beatIds: string[];
};

/**
 * Describes the message story_structure.v1.ListBeatsByPlotPointResponse.
 * Use `create(ListBeatsByPlotPointResponseSchema)` to create a new message.
 */
export const ListBeatsByPlotPointResponseSchema: GenMessage<ListBeatsByPlotPointResponse> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat_to_plot_point, 4);

/**
 * @generated from message story_structure.v1.ListPlotPointsByBeatsResponse
 */
export type ListPlotPointsByBeatsResponse = Message<"story_structure.v1.ListPlotPointsByBeatsResponse"> & {
  /**
   * The ids of the plot points the beat is linked to.
   *
   * @generated from field: repeated string plot_point_ids = 1;
   */
  plotPointIds: string[];
};

/**
 * Describes the message story_structure.v1.ListPlotPointsByBeatsResponse.
 * Use `create(ListPlotPointsByBeatsResponseSchema)` to create a new message.
 */
export const ListPlotPointsByBeatsResponseSchema: GenMessage<ListPlotPointsByBeatsResponse> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_beat_to_plot_point, 5);

/**
 * @generated from service story_structure.v1.BeatToPlotPointService
 */
export const BeatToPlotPointService: GenService<{
  /**
   * Retrieve the ids of the beats related to a plot point.
   *
   * @generated from rpc story_structure.v1.BeatToPlotPointService.ListBeatsByPlotPoint
   */
  listBeatsByPlotPoint: {
    methodKind: "unary";
    input: typeof ListBeatsByPlotPointRequestSchema;
    output: typeof ListBeatsByPlotPointResponseSchema;
  },
  /**
   * Retrieve the ids of the plot points related to a beat.
   *
   * @generated from rpc story_structure.v1.BeatToPlotPointService.ListPlotPointsByBeats
   */
  listPlotPointsByBeats: {
    methodKind: "unary";
    input: typeof ListPlotPointsByBeatsRequestSchema;
    output: typeof ListPlotPointsByBeatsResponseSchema;
  },
  /**
   * Link a beat to a plot point.
   *
   * @generated from rpc story_structure.v1.BeatToPlotPointService.LinkBeatAndPlotPoint
   */
  linkBeatAndPlotPoint: {
    methodKind: "unary";
    input: typeof LinkBeatAndPlotPointRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Unlink a beat from a plot point.
   *
   * @generated from rpc story_structure.v1.BeatToPlotPointService.UnlinkBeatAndPlotPoint
   */
  unlinkBeatAndPlotPoint: {
    methodKind: "unary";
    input: typeof UnlinkBeatAndPlotPointRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_story_structure_v1_stc_beat_to_plot_point, 0);

