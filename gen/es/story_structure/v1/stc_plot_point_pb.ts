// @generated by protoc-gen-es v2.2.0 with parameter "target=ts"
// @generated from file story_structure/v1/stc_plot_point.proto (package story_structure.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file story_structure/v1/stc_plot_point.proto.
 */
export const file_story_structure_v1_stc_plot_point: GenFile = /*@__PURE__*/
  fileDesc("CidzdG9yeV9zdHJ1Y3R1cmUvdjEvc3RjX3Bsb3RfcG9pbnQucHJvdG8SEnN0b3J5X3N0cnVjdHVyZS52MSIhChNHZXRQbG90UG9pbnRSZXF1ZXN0EgoKAmlkGAEgASgJIiQKFUxpc3RQbG90UG9pbnRzUmVxdWVzdBILCgNpZHMYASADKAkiOAoXU2VhcmNoUGxvdFBvaW50c1JlcXVlc3QSDQoFbGltaXQYASABKAUSDgoGb2Zmc2V0GAIgASgFIjYKFkNyZWF0ZVBsb3RQb2ludFJlcXVlc3QSDAoEbmFtZRgBIAEoCRIOCgZwcm9tcHQYAiABKAkiQgoWVXBkYXRlUGxvdFBvaW50UmVxdWVzdBIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEg4KBnByb21wdBgDIAEoCSIkChZEZWxldGVQbG90UG9pbnRSZXF1ZXN0EgoKAmlkGAEgASgJIkkKFEdldFBsb3RQb2ludFJlc3BvbnNlEjEKCnBsb3RfcG9pbnQYASABKAsyHS5zdG9yeV9zdHJ1Y3R1cmUudjEuUGxvdFBvaW50IkwKFkxpc3RQbG90UG9pbnRzUmVzcG9uc2USMgoLcGxvdF9wb2ludHMYASADKAsyHS5zdG9yeV9zdHJ1Y3R1cmUudjEuUGxvdFBvaW50IjMKGFNlYXJjaFBsb3RQb2ludHNSZXNwb25zZRIXCg9wbG90X3BvaW50c19pZHMYASADKAkiJQoXQ3JlYXRlUGxvdFBvaW50UmVzcG9uc2USCgoCaWQYASABKAkiJQoXVXBkYXRlUGxvdFBvaW50UmVzcG9uc2USCgoCaWQYASABKAkiNQoJUGxvdFBvaW50EgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSDgoGcHJvbXB0GAMgASgJMogFChBQbG90UG9pbnRTZXJ2aWNlEmMKDEdldFBsb3RQb2ludBInLnN0b3J5X3N0cnVjdHVyZS52MS5HZXRQbG90UG9pbnRSZXF1ZXN0Giguc3Rvcnlfc3RydWN0dXJlLnYxLkdldFBsb3RQb2ludFJlc3BvbnNlIgASaQoOTGlzdFBsb3RQb2ludHMSKS5zdG9yeV9zdHJ1Y3R1cmUudjEuTGlzdFBsb3RQb2ludHNSZXF1ZXN0Giouc3Rvcnlfc3RydWN0dXJlLnYxLkxpc3RQbG90UG9pbnRzUmVzcG9uc2UiABJvChBTZWFyY2hQbG90UG9pbnRzEisuc3Rvcnlfc3RydWN0dXJlLnYxLlNlYXJjaFBsb3RQb2ludHNSZXF1ZXN0Giwuc3Rvcnlfc3RydWN0dXJlLnYxLlNlYXJjaFBsb3RQb2ludHNSZXNwb25zZSIAEmwKD0NyZWF0ZVBsb3RQb2ludBIqLnN0b3J5X3N0cnVjdHVyZS52MS5DcmVhdGVQbG90UG9pbnRSZXF1ZXN0Gisuc3Rvcnlfc3RydWN0dXJlLnYxLkNyZWF0ZVBsb3RQb2ludFJlc3BvbnNlIgASbAoPVXBkYXRlUGxvdFBvaW50Eiouc3Rvcnlfc3RydWN0dXJlLnYxLlVwZGF0ZVBsb3RQb2ludFJlcXVlc3QaKy5zdG9yeV9zdHJ1Y3R1cmUudjEuVXBkYXRlUGxvdFBvaW50UmVzcG9uc2UiABJXCg9EZWxldGVQbG90UG9pbnQSKi5zdG9yeV9zdHJ1Y3R1cmUudjEuRGVsZXRlUGxvdFBvaW50UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAQkVaQ2dpdGh1Yi5jb20vYS1ub3ZlbC9wcm90by9nZW4vZ28vc3Rvcnlfc3RydWN0dXJlL3YxO3N0b3J5c3RydWN0dXJlcGJiBnByb3RvMw", [file_google_protobuf_empty]);

/**
 * @generated from message story_structure.v1.GetPlotPointRequest
 */
export type GetPlotPointRequest = Message<"story_structure.v1.GetPlotPointRequest"> & {
  /**
   * The id of the plot point to retrieve.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message story_structure.v1.GetPlotPointRequest.
 * Use `create(GetPlotPointRequestSchema)` to create a new message.
 */
export const GetPlotPointRequestSchema: GenMessage<GetPlotPointRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_plot_point, 0);

/**
 * @generated from message story_structure.v1.ListPlotPointsRequest
 */
export type ListPlotPointsRequest = Message<"story_structure.v1.ListPlotPointsRequest"> & {
  /**
   * The ids of the plot points to retrieve. A maximum number of ids that can be provided in one request may be
   * defined by the server.
   *
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];
};

/**
 * Describes the message story_structure.v1.ListPlotPointsRequest.
 * Use `create(ListPlotPointsRequestSchema)` to create a new message.
 */
export const ListPlotPointsRequestSchema: GenMessage<ListPlotPointsRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_plot_point, 1);

/**
 * @generated from message story_structure.v1.SearchPlotPointsRequest
 */
export type SearchPlotPointsRequest = Message<"story_structure.v1.SearchPlotPointsRequest"> & {
  /**
   * Batch size for the search. The server may cap this value.
   *
   * @generated from field: int32 limit = 1;
   */
  limit: number;

  /**
   * Offset for the search. The server may cap this value.
   *
   * @generated from field: int32 offset = 2;
   */
  offset: number;
};

/**
 * Describes the message story_structure.v1.SearchPlotPointsRequest.
 * Use `create(SearchPlotPointsRequestSchema)` to create a new message.
 */
export const SearchPlotPointsRequestSchema: GenMessage<SearchPlotPointsRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_plot_point, 2);

/**
 * @generated from message story_structure.v1.CreatePlotPointRequest
 */
export type CreatePlotPointRequest = Message<"story_structure.v1.CreatePlotPointRequest"> & {
  /**
   * The name of the plot point to create. While not required to be unique, it is recommended to be, so it is not
   * confused with other plot points.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The main prompt that should be used to generate a story with this plot point.
   *
   * @generated from field: string prompt = 2;
   */
  prompt: string;
};

/**
 * Describes the message story_structure.v1.CreatePlotPointRequest.
 * Use `create(CreatePlotPointRequestSchema)` to create a new message.
 */
export const CreatePlotPointRequestSchema: GenMessage<CreatePlotPointRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_plot_point, 3);

/**
 * @generated from message story_structure.v1.UpdatePlotPointRequest
 */
export type UpdatePlotPointRequest = Message<"story_structure.v1.UpdatePlotPointRequest"> & {
  /**
   * The ID of the existing plot point to update.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The name of the plot point to create. While not required to be unique, it is recommended to be, so it is not
   * confused with other plot points.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The main prompt that should be used to generate a story with this plot point.
   *
   * @generated from field: string prompt = 3;
   */
  prompt: string;
};

/**
 * Describes the message story_structure.v1.UpdatePlotPointRequest.
 * Use `create(UpdatePlotPointRequestSchema)` to create a new message.
 */
export const UpdatePlotPointRequestSchema: GenMessage<UpdatePlotPointRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_plot_point, 4);

/**
 * @generated from message story_structure.v1.DeletePlotPointRequest
 */
export type DeletePlotPointRequest = Message<"story_structure.v1.DeletePlotPointRequest"> & {
  /**
   * The ID of the plot point to delete.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message story_structure.v1.DeletePlotPointRequest.
 * Use `create(DeletePlotPointRequestSchema)` to create a new message.
 */
export const DeletePlotPointRequestSchema: GenMessage<DeletePlotPointRequest> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_plot_point, 5);

/**
 * @generated from message story_structure.v1.GetPlotPointResponse
 */
export type GetPlotPointResponse = Message<"story_structure.v1.GetPlotPointResponse"> & {
  /**
   * The plot point that was retrieved.
   *
   * @generated from field: story_structure.v1.PlotPoint plot_point = 1;
   */
  plotPoint?: PlotPoint;
};

/**
 * Describes the message story_structure.v1.GetPlotPointResponse.
 * Use `create(GetPlotPointResponseSchema)` to create a new message.
 */
export const GetPlotPointResponseSchema: GenMessage<GetPlotPointResponse> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_plot_point, 6);

/**
 * @generated from message story_structure.v1.ListPlotPointsResponse
 */
export type ListPlotPointsResponse = Message<"story_structure.v1.ListPlotPointsResponse"> & {
  /**
   * A list of plot points, that matches the provided IDs. The number of returned plot points may be less than the
   * number of provided IDs, if some of them are incorrect / don't point to an existing plot point.
   *
   * @generated from field: repeated story_structure.v1.PlotPoint plot_points = 1;
   */
  plotPoints: PlotPoint[];
};

/**
 * Describes the message story_structure.v1.ListPlotPointsResponse.
 * Use `create(ListPlotPointsResponseSchema)` to create a new message.
 */
export const ListPlotPointsResponseSchema: GenMessage<ListPlotPointsResponse> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_plot_point, 7);

/**
 * @generated from message story_structure.v1.SearchPlotPointsResponse
 */
export type SearchPlotPointsResponse = Message<"story_structure.v1.SearchPlotPointsResponse"> & {
  /**
   * The ids of the plot points matching the search. Details for each plot point can be retrieved using ListPlotPoints,
   * or separately using GetPlotPoint.
   *
   * @generated from field: repeated string plot_points_ids = 1;
   */
  plotPointsIds: string[];
};

/**
 * Describes the message story_structure.v1.SearchPlotPointsResponse.
 * Use `create(SearchPlotPointsResponseSchema)` to create a new message.
 */
export const SearchPlotPointsResponseSchema: GenMessage<SearchPlotPointsResponse> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_plot_point, 8);

/**
 * @generated from message story_structure.v1.CreatePlotPointResponse
 */
export type CreatePlotPointResponse = Message<"story_structure.v1.CreatePlotPointResponse"> & {
  /**
   * The id of the newly created plot point.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message story_structure.v1.CreatePlotPointResponse.
 * Use `create(CreatePlotPointResponseSchema)` to create a new message.
 */
export const CreatePlotPointResponseSchema: GenMessage<CreatePlotPointResponse> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_plot_point, 9);

/**
 * @generated from message story_structure.v1.UpdatePlotPointResponse
 */
export type UpdatePlotPointResponse = Message<"story_structure.v1.UpdatePlotPointResponse"> & {
  /**
   * The id of the updated plot point.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message story_structure.v1.UpdatePlotPointResponse.
 * Use `create(UpdatePlotPointResponseSchema)` to create a new message.
 */
export const UpdatePlotPointResponseSchema: GenMessage<UpdatePlotPointResponse> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_plot_point, 10);

/**
 * @generated from message story_structure.v1.PlotPoint
 */
export type PlotPoint = Message<"story_structure.v1.PlotPoint"> & {
  /**
   * The unique identifier of the plot point.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The display name of the plot point. It is not required to be unique.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The main prompt that should be used to generate a story with this plot point.
   *
   * @generated from field: string prompt = 3;
   */
  prompt: string;
};

/**
 * Describes the message story_structure.v1.PlotPoint.
 * Use `create(PlotPointSchema)` to create a new message.
 */
export const PlotPointSchema: GenMessage<PlotPoint> = /*@__PURE__*/
  messageDesc(file_story_structure_v1_stc_plot_point, 11);

/**
 * @generated from service story_structure.v1.PlotPointService
 */
export const PlotPointService: GenService<{
  /**
   * Get a specific plot point details.
   *
   * @generated from rpc story_structure.v1.PlotPointService.GetPlotPoint
   */
  getPlotPoint: {
    methodKind: "unary";
    input: typeof GetPlotPointRequestSchema;
    output: typeof GetPlotPointResponseSchema;
  },
  /**
   * Return a list of plot points, based on a list of IDs provided.
   *
   * @generated from rpc story_structure.v1.PlotPointService.ListPlotPoints
   */
  listPlotPoints: {
    methodKind: "unary";
    input: typeof ListPlotPointsRequestSchema;
    output: typeof ListPlotPointsResponseSchema;
  },
  /**
   * Return a list of plot points ids, based on a search query. You can then use ListPlotPoints to retrieve
   * the specific details of each plot point.
   *
   * @generated from rpc story_structure.v1.PlotPointService.SearchPlotPoints
   */
  searchPlotPoints: {
    methodKind: "unary";
    input: typeof SearchPlotPointsRequestSchema;
    output: typeof SearchPlotPointsResponseSchema;
  },
  /**
   * Create a new plot point.
   *
   * @generated from rpc story_structure.v1.PlotPointService.CreatePlotPoint
   */
  createPlotPoint: {
    methodKind: "unary";
    input: typeof CreatePlotPointRequestSchema;
    output: typeof CreatePlotPointResponseSchema;
  },
  /**
   * Update an existing plot point.
   *
   * @generated from rpc story_structure.v1.PlotPointService.UpdatePlotPoint
   */
  updatePlotPoint: {
    methodKind: "unary";
    input: typeof UpdatePlotPointRequestSchema;
    output: typeof UpdatePlotPointResponseSchema;
  },
  /**
   * Delete an existing plot point. This method should not fail if the plot point does not exist.
   *
   * @generated from rpc story_structure.v1.PlotPointService.DeletePlotPoint
   */
  deletePlotPoint: {
    methodKind: "unary";
    input: typeof DeletePlotPointRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_story_structure_v1_stc_plot_point, 0);

