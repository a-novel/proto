// @generated by protoc-gen-es v2.2.0 with parameter "target=ts"
// @generated from file story_configuration/v1/configuration.proto (package story_configuration.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file story_configuration/v1/configuration.proto.
 */
export const file_story_configuration_v1_configuration: GenFile = /*@__PURE__*/
  fileDesc("CipzdG9yeV9jb25maWd1cmF0aW9uL3YxL2NvbmZpZ3VyYXRpb24ucHJvdG8SFnN0b3J5X2NvbmZpZ3VyYXRpb24udjEiJQoXR2V0Q29uZmlndXJhdGlvblJlcXVlc3QSCgoCaWQYASABKAkiKAoZTGlzdENvbmZpZ3VyYXRpb25zUmVxdWVzdBILCgNpZHMYASADKAkiPAobU2VhcmNoQ29uZmlndXJhdGlvbnNSZXF1ZXN0Eg0KBWxpbWl0GAEgASgFEg4KBm9mZnNldBgCIAEoBSJvChpDcmVhdGVDb25maWd1cmF0aW9uUmVxdWVzdBIMCgRuYW1lGAEgASgJEkMKC3Bsb3RfcG9pbnRzGAIgAygLMi4uc3RvcnlfY29uZmlndXJhdGlvbi52MS5QbG90UG9pbnRDb25maWd1cmF0aW9uInsKGlVwZGF0ZUNvbmZpZ3VyYXRpb25SZXF1ZXN0EgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSQwoLcGxvdF9wb2ludHMYAyADKAsyLi5zdG9yeV9jb25maWd1cmF0aW9uLnYxLlBsb3RQb2ludENvbmZpZ3VyYXRpb24iKAoaRGVsZXRlQ29uZmlndXJhdGlvblJlcXVlc3QSCgoCaWQYASABKAkiWAoYR2V0Q29uZmlndXJhdGlvblJlc3BvbnNlEjwKDWNvbmZpZ3VyYXRpb24YASABKAsyJS5zdG9yeV9jb25maWd1cmF0aW9uLnYxLkNvbmZpZ3VyYXRpb24iWwoaTGlzdENvbmZpZ3VyYXRpb25zUmVzcG9uc2USPQoOY29uZmlndXJhdGlvbnMYASADKAsyJS5zdG9yeV9jb25maWd1cmF0aW9uLnYxLkNvbmZpZ3VyYXRpb24iOQocU2VhcmNoQ29uZmlndXJhdGlvbnNSZXNwb25zZRIZChFjb25maWd1cmF0aW9uX2lkcxgBIAMoCSJbChtDcmVhdGVDb25maWd1cmF0aW9uUmVzcG9uc2USPAoNY29uZmlndXJhdGlvbhgBIAEoCzIlLnN0b3J5X2NvbmZpZ3VyYXRpb24udjEuQ29uZmlndXJhdGlvbiJbChtVcGRhdGVDb25maWd1cmF0aW9uUmVzcG9uc2USPAoNY29uZmlndXJhdGlvbhgBIAEoCzIlLnN0b3J5X2NvbmZpZ3VyYXRpb24udjEuQ29uZmlndXJhdGlvbiJuCg1Db25maWd1cmF0aW9uEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSQwoLcGxvdF9wb2ludHMYAyADKAsyLi5zdG9yeV9jb25maWd1cmF0aW9uLnYxLlBsb3RQb2ludENvbmZpZ3VyYXRpb24iNwoWUGxvdFBvaW50Q29uZmlndXJhdGlvbhIKCgJpZBgBIAEoCRIRCgliZWF0c19pZHMYAiADKAky/wUKFENvbmZpZ3VyYXRpb25TZXJ2aWNlEncKEEdldENvbmZpZ3VyYXRpb24SLy5zdG9yeV9jb25maWd1cmF0aW9uLnYxLkdldENvbmZpZ3VyYXRpb25SZXF1ZXN0GjAuc3RvcnlfY29uZmlndXJhdGlvbi52MS5HZXRDb25maWd1cmF0aW9uUmVzcG9uc2UiABJ9ChJMaXN0Q29uZmlndXJhdGlvbnMSMS5zdG9yeV9jb25maWd1cmF0aW9uLnYxLkxpc3RDb25maWd1cmF0aW9uc1JlcXVlc3QaMi5zdG9yeV9jb25maWd1cmF0aW9uLnYxLkxpc3RDb25maWd1cmF0aW9uc1Jlc3BvbnNlIgASgwEKFFNlYXJjaENvbmZpZ3VyYXRpb25zEjMuc3RvcnlfY29uZmlndXJhdGlvbi52MS5TZWFyY2hDb25maWd1cmF0aW9uc1JlcXVlc3QaNC5zdG9yeV9jb25maWd1cmF0aW9uLnYxLlNlYXJjaENvbmZpZ3VyYXRpb25zUmVzcG9uc2UiABKAAQoTQ3JlYXRlQ29uZmlndXJhdGlvbhIyLnN0b3J5X2NvbmZpZ3VyYXRpb24udjEuQ3JlYXRlQ29uZmlndXJhdGlvblJlcXVlc3QaMy5zdG9yeV9jb25maWd1cmF0aW9uLnYxLkNyZWF0ZUNvbmZpZ3VyYXRpb25SZXNwb25zZSIAEoABChNVcGRhdGVDb25maWd1cmF0aW9uEjIuc3RvcnlfY29uZmlndXJhdGlvbi52MS5VcGRhdGVDb25maWd1cmF0aW9uUmVxdWVzdBozLnN0b3J5X2NvbmZpZ3VyYXRpb24udjEuVXBkYXRlQ29uZmlndXJhdGlvblJlc3BvbnNlIgASYwoTRGVsZXRlQ29uZmlndXJhdGlvbhIyLnN0b3J5X2NvbmZpZ3VyYXRpb24udjEuRGVsZXRlQ29uZmlndXJhdGlvblJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiAEJNWktnaXRodWIuY29tL2Etbm92ZWwvcHJvdG8vZ2VuL2dvL3N0b3J5X2NvbmZpZ3VyYXRpb24vdjE7c3Rvcnljb25maWd1cmF0aW9ucGJiBnByb3RvMw", [file_google_protobuf_empty]);

/**
 * @generated from message story_configuration.v1.GetConfigurationRequest
 */
export type GetConfigurationRequest = Message<"story_configuration.v1.GetConfigurationRequest"> & {
  /**
   * The id of the configuration to retrieve.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message story_configuration.v1.GetConfigurationRequest.
 * Use `create(GetConfigurationRequestSchema)` to create a new message.
 */
export const GetConfigurationRequestSchema: GenMessage<GetConfigurationRequest> = /*@__PURE__*/
  messageDesc(file_story_configuration_v1_configuration, 0);

/**
 * @generated from message story_configuration.v1.ListConfigurationsRequest
 */
export type ListConfigurationsRequest = Message<"story_configuration.v1.ListConfigurationsRequest"> & {
  /**
   * The ids of the configurations to retrieve. A maximum number of ids that can be provided in one request may be
   * defined by the server.
   *
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];
};

/**
 * Describes the message story_configuration.v1.ListConfigurationsRequest.
 * Use `create(ListConfigurationsRequestSchema)` to create a new message.
 */
export const ListConfigurationsRequestSchema: GenMessage<ListConfigurationsRequest> = /*@__PURE__*/
  messageDesc(file_story_configuration_v1_configuration, 1);

/**
 * @generated from message story_configuration.v1.SearchConfigurationsRequest
 */
export type SearchConfigurationsRequest = Message<"story_configuration.v1.SearchConfigurationsRequest"> & {
  /**
   * Batch size for the search. The server may cap this value.
   *
   * @generated from field: int32 limit = 1;
   */
  limit: number;

  /**
   * Offset for the search. The server may cap this value.
   *
   * @generated from field: int32 offset = 2;
   */
  offset: number;
};

/**
 * Describes the message story_configuration.v1.SearchConfigurationsRequest.
 * Use `create(SearchConfigurationsRequestSchema)` to create a new message.
 */
export const SearchConfigurationsRequestSchema: GenMessage<SearchConfigurationsRequest> = /*@__PURE__*/
  messageDesc(file_story_configuration_v1_configuration, 2);

/**
 * @generated from message story_configuration.v1.CreateConfigurationRequest
 */
export type CreateConfigurationRequest = Message<"story_configuration.v1.CreateConfigurationRequest"> & {
  /**
   * The name of the configuration to create. While not required to be unique, it is recommended to be, so it is not
   * confused with other configurations.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The ordered list of plot points selected for the current configuration.
   *
   * @generated from field: repeated story_configuration.v1.PlotPointConfiguration plot_points = 2;
   */
  plotPoints: PlotPointConfiguration[];
};

/**
 * Describes the message story_configuration.v1.CreateConfigurationRequest.
 * Use `create(CreateConfigurationRequestSchema)` to create a new message.
 */
export const CreateConfigurationRequestSchema: GenMessage<CreateConfigurationRequest> = /*@__PURE__*/
  messageDesc(file_story_configuration_v1_configuration, 3);

/**
 * @generated from message story_configuration.v1.UpdateConfigurationRequest
 */
export type UpdateConfigurationRequest = Message<"story_configuration.v1.UpdateConfigurationRequest"> & {
  /**
   * The ID of the existing configuration to update.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The name of the configuration to create. While not required to be unique, it is recommended to be, so it is not
   * confused with other configurations.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The ordered list of plot points selected for the current configuration.
   *
   * @generated from field: repeated story_configuration.v1.PlotPointConfiguration plot_points = 3;
   */
  plotPoints: PlotPointConfiguration[];
};

/**
 * Describes the message story_configuration.v1.UpdateConfigurationRequest.
 * Use `create(UpdateConfigurationRequestSchema)` to create a new message.
 */
export const UpdateConfigurationRequestSchema: GenMessage<UpdateConfigurationRequest> = /*@__PURE__*/
  messageDesc(file_story_configuration_v1_configuration, 4);

/**
 * @generated from message story_configuration.v1.DeleteConfigurationRequest
 */
export type DeleteConfigurationRequest = Message<"story_configuration.v1.DeleteConfigurationRequest"> & {
  /**
   * The ID of the configuration to delete.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message story_configuration.v1.DeleteConfigurationRequest.
 * Use `create(DeleteConfigurationRequestSchema)` to create a new message.
 */
export const DeleteConfigurationRequestSchema: GenMessage<DeleteConfigurationRequest> = /*@__PURE__*/
  messageDesc(file_story_configuration_v1_configuration, 5);

/**
 * @generated from message story_configuration.v1.GetConfigurationResponse
 */
export type GetConfigurationResponse = Message<"story_configuration.v1.GetConfigurationResponse"> & {
  /**
   * The configuration that was retrieved.
   *
   * @generated from field: story_configuration.v1.Configuration configuration = 1;
   */
  configuration?: Configuration;
};

/**
 * Describes the message story_configuration.v1.GetConfigurationResponse.
 * Use `create(GetConfigurationResponseSchema)` to create a new message.
 */
export const GetConfigurationResponseSchema: GenMessage<GetConfigurationResponse> = /*@__PURE__*/
  messageDesc(file_story_configuration_v1_configuration, 6);

/**
 * @generated from message story_configuration.v1.ListConfigurationsResponse
 */
export type ListConfigurationsResponse = Message<"story_configuration.v1.ListConfigurationsResponse"> & {
  /**
   * The configurations that were retrieved.
   *
   * @generated from field: repeated story_configuration.v1.Configuration configurations = 1;
   */
  configurations: Configuration[];
};

/**
 * Describes the message story_configuration.v1.ListConfigurationsResponse.
 * Use `create(ListConfigurationsResponseSchema)` to create a new message.
 */
export const ListConfigurationsResponseSchema: GenMessage<ListConfigurationsResponse> = /*@__PURE__*/
  messageDesc(file_story_configuration_v1_configuration, 7);

/**
 * @generated from message story_configuration.v1.SearchConfigurationsResponse
 */
export type SearchConfigurationsResponse = Message<"story_configuration.v1.SearchConfigurationsResponse"> & {
  /**
   * A list of configuration ids, that matches the provided search query. The number of returned configuration ids may
   * be less than the number of provided IDs, if some of them are incorrect / don't point to an existing configuration.
   *
   * @generated from field: repeated string configuration_ids = 1;
   */
  configurationIds: string[];
};

/**
 * Describes the message story_configuration.v1.SearchConfigurationsResponse.
 * Use `create(SearchConfigurationsResponseSchema)` to create a new message.
 */
export const SearchConfigurationsResponseSchema: GenMessage<SearchConfigurationsResponse> = /*@__PURE__*/
  messageDesc(file_story_configuration_v1_configuration, 8);

/**
 * @generated from message story_configuration.v1.CreateConfigurationResponse
 */
export type CreateConfigurationResponse = Message<"story_configuration.v1.CreateConfigurationResponse"> & {
  /**
   * The configuration that was created.
   *
   * @generated from field: story_configuration.v1.Configuration configuration = 1;
   */
  configuration?: Configuration;
};

/**
 * Describes the message story_configuration.v1.CreateConfigurationResponse.
 * Use `create(CreateConfigurationResponseSchema)` to create a new message.
 */
export const CreateConfigurationResponseSchema: GenMessage<CreateConfigurationResponse> = /*@__PURE__*/
  messageDesc(file_story_configuration_v1_configuration, 9);

/**
 * @generated from message story_configuration.v1.UpdateConfigurationResponse
 */
export type UpdateConfigurationResponse = Message<"story_configuration.v1.UpdateConfigurationResponse"> & {
  /**
   * The configuration that was updated.
   *
   * @generated from field: story_configuration.v1.Configuration configuration = 1;
   */
  configuration?: Configuration;
};

/**
 * Describes the message story_configuration.v1.UpdateConfigurationResponse.
 * Use `create(UpdateConfigurationResponseSchema)` to create a new message.
 */
export const UpdateConfigurationResponseSchema: GenMessage<UpdateConfigurationResponse> = /*@__PURE__*/
  messageDesc(file_story_configuration_v1_configuration, 10);

/**
 * @generated from message story_configuration.v1.Configuration
 */
export type Configuration = Message<"story_configuration.v1.Configuration"> & {
  /**
   * The unique identifier of the configuration.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The display name of the configuration.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The ordered list of plot points selected for the current configuration.
   *
   * @generated from field: repeated story_configuration.v1.PlotPointConfiguration plot_points = 3;
   */
  plotPoints: PlotPointConfiguration[];
};

/**
 * Describes the message story_configuration.v1.Configuration.
 * Use `create(ConfigurationSchema)` to create a new message.
 */
export const ConfigurationSchema: GenMessage<Configuration> = /*@__PURE__*/
  messageDesc(file_story_configuration_v1_configuration, 11);

/**
 * @generated from message story_configuration.v1.PlotPointConfiguration
 */
export type PlotPointConfiguration = Message<"story_configuration.v1.PlotPointConfiguration"> & {
  /**
   * The unique identifier of the related plot point.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The list of beats selected for the current plot point.
   *
   * @generated from field: repeated string beats_ids = 2;
   */
  beatsIds: string[];
};

/**
 * Describes the message story_configuration.v1.PlotPointConfiguration.
 * Use `create(PlotPointConfigurationSchema)` to create a new message.
 */
export const PlotPointConfigurationSchema: GenMessage<PlotPointConfiguration> = /*@__PURE__*/
  messageDesc(file_story_configuration_v1_configuration, 12);

/**
 * @generated from service story_configuration.v1.ConfigurationService
 */
export const ConfigurationService: GenService<{
  /**
   * Get a specific configuration details.
   *
   * @generated from rpc story_configuration.v1.ConfigurationService.GetConfiguration
   */
  getConfiguration: {
    methodKind: "unary";
    input: typeof GetConfigurationRequestSchema;
    output: typeof GetConfigurationResponseSchema;
  },
  /**
   * Return a list of configurations, based on a list of IDs provided.
   *
   * @generated from rpc story_configuration.v1.ConfigurationService.ListConfigurations
   */
  listConfigurations: {
    methodKind: "unary";
    input: typeof ListConfigurationsRequestSchema;
    output: typeof ListConfigurationsResponseSchema;
  },
  /**
   * Return a list of configuration ids, based on a search query. You can then use ListConfigurations to retrieve
   * the specific details of each configuration.
   *
   * @generated from rpc story_configuration.v1.ConfigurationService.SearchConfigurations
   */
  searchConfigurations: {
    methodKind: "unary";
    input: typeof SearchConfigurationsRequestSchema;
    output: typeof SearchConfigurationsResponseSchema;
  },
  /**
   * Create a new configuration.
   *
   * @generated from rpc story_configuration.v1.ConfigurationService.CreateConfiguration
   */
  createConfiguration: {
    methodKind: "unary";
    input: typeof CreateConfigurationRequestSchema;
    output: typeof CreateConfigurationResponseSchema;
  },
  /**
   * Update an existing configuration.
   *
   * @generated from rpc story_configuration.v1.ConfigurationService.UpdateConfiguration
   */
  updateConfiguration: {
    methodKind: "unary";
    input: typeof UpdateConfigurationRequestSchema;
    output: typeof UpdateConfigurationResponseSchema;
  },
  /**
   * Delete an existing configuration. This method should not fail if the configuration does not exist.
   *
   * @generated from rpc story_configuration.v1.ConfigurationService.DeleteConfiguration
   */
  deleteConfiguration: {
    methodKind: "unary";
    input: typeof DeleteConfigurationRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_story_configuration_v1_configuration, 0);

