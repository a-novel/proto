syntax = "proto3";

import "google/protobuf/empty.proto";

option go_package = "proto-go/story-structure;storystructurepb";

package structure;

service BeatsGroupService {
  // Get a specific beats group details.
  rpc GetBeatsGroup(GetBeatsGroupRequest) returns (BeatsGroup) {}
  // Return a list of beats groups, based on a list of IDs provided.
  rpc ListBeatsGroups(ListBeatsGroupsRequest) returns (ListBeatsGroupsResponse) {}
  // Return a list of beats group ids, based on a search query. You can then use ListBeatsGroups to retrieve
  // the specific details of each beats group.
  rpc SearchBeatsGroups(SearchBeatsGroupsRequest) returns (SearchBeatsGroupsResponse) {}

  // Create a new beats group.
  rpc CreateBeatsGroup(CreateBeatsGroupRequest) returns (BeatsGroup) {}
  // Update an existing beats group.
  rpc UpdateBeatsGroup(UpdateBeatsGroupRequest) returns (BeatsGroup) {}
  // Delete an existing beats group. This method should not fail if the beats group does not exist.
  rpc DeleteBeatsGroup(DeleteBeatsGroupRequest) returns (google.protobuf.Empty) {}
}

// ================================================================================
// REQUESTS
// ================================================================================

message GetBeatsGroupRequest {
  // The id of the beats group to retrieve.
  string id = 1;
}

message ListBeatsGroupsRequest {
  // The ids of the beats groups to retrieve. A maximum number of ids that can be provided in one request may be
  // defined by the server.
  repeated string ids = 1;
}

message SearchBeatsGroupsRequest {
  // Batch size for the search. The server may cap this value.
  int32 limit = 1;
  // Offset for the search. The server may cap this value.
  int32 offset = 2;
}

message CreateBeatsGroupRequest {
  // The name of the beats group to create. While not required to be unique, it is recommended to be, so it is not
  // confused with other beats groups.
  string name = 1;
}

message UpdateBeatsGroupRequest {
  // The ID of the existing beats group to update.
  string id = 1;
  // The name of the beats group to create. While not required to be unique, it is recommended to be, so it is not
  // confused with other beats groups.
  string name = 2;
}

message DeleteBeatsGroupRequest {
  // The ID of the beats group to delete.
  string id = 1;
}

// ================================================================================
// RESPONSES
// ================================================================================

message ListBeatsGroupsResponse {
  // The beats groups that were retrieved.
  repeated BeatsGroup beats_groups = 1;
}

message SearchBeatsGroupsResponse {
  // The ids of the beats groups matching the search. Details for each beats group can be retrieved using ListBeatsGroups,
  // or separately using GetBeatsGroup.
  repeated string ids = 1;
}

// ================================================================================
// GENERIC
// ================================================================================

message BeatsGroup {
  // The unique identifier of the beats group.
  string id = 1;
  // The name of the beats group.
  string name = 2;
}
