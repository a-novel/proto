// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: proto/story-structure/stc_beats_group.proto

package storystructurepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetBeatsGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the beats group to retrieve.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBeatsGroupRequest) Reset() {
	*x = GetBeatsGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBeatsGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBeatsGroupRequest) ProtoMessage() {}

func (x *GetBeatsGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBeatsGroupRequest.ProtoReflect.Descriptor instead.
func (*GetBeatsGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_story_structure_stc_beats_group_proto_rawDescGZIP(), []int{0}
}

func (x *GetBeatsGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListBeatsGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ids of the beats groups to retrieve. A maximum number of ids that can be provided in one request may be
	// defined by the server.
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ListBeatsGroupsRequest) Reset() {
	*x = ListBeatsGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeatsGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeatsGroupsRequest) ProtoMessage() {}

func (x *ListBeatsGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeatsGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListBeatsGroupsRequest) Descriptor() ([]byte, []int) {
	return file_proto_story_structure_stc_beats_group_proto_rawDescGZIP(), []int{1}
}

func (x *ListBeatsGroupsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SearchBeatsGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Batch size for the search. The server may cap this value.
	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset for the search. The server may cap this value.
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *SearchBeatsGroupsRequest) Reset() {
	*x = SearchBeatsGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchBeatsGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBeatsGroupsRequest) ProtoMessage() {}

func (x *SearchBeatsGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBeatsGroupsRequest.ProtoReflect.Descriptor instead.
func (*SearchBeatsGroupsRequest) Descriptor() ([]byte, []int) {
	return file_proto_story_structure_stc_beats_group_proto_rawDescGZIP(), []int{2}
}

func (x *SearchBeatsGroupsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchBeatsGroupsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type CreateBeatsGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the beats group to create. While not required to be unique, it is recommended to be, so it is not
	// confused with other beats groups.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateBeatsGroupRequest) Reset() {
	*x = CreateBeatsGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBeatsGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBeatsGroupRequest) ProtoMessage() {}

func (x *CreateBeatsGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBeatsGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateBeatsGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_story_structure_stc_beats_group_proto_rawDescGZIP(), []int{3}
}

func (x *CreateBeatsGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateBeatsGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the existing beats group to update.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the beats group to create. While not required to be unique, it is recommended to be, so it is not
	// confused with other beats groups.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateBeatsGroupRequest) Reset() {
	*x = UpdateBeatsGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBeatsGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBeatsGroupRequest) ProtoMessage() {}

func (x *UpdateBeatsGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBeatsGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateBeatsGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_story_structure_stc_beats_group_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateBeatsGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateBeatsGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteBeatsGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the beats group to delete.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteBeatsGroupRequest) Reset() {
	*x = DeleteBeatsGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBeatsGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBeatsGroupRequest) ProtoMessage() {}

func (x *DeleteBeatsGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBeatsGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteBeatsGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_story_structure_stc_beats_group_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteBeatsGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListBeatsGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The beats groups that were retrieved.
	BeatsGroups []*BeatsGroup `protobuf:"bytes,1,rep,name=beats_groups,json=beatsGroups,proto3" json:"beats_groups,omitempty"`
}

func (x *ListBeatsGroupsResponse) Reset() {
	*x = ListBeatsGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeatsGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeatsGroupsResponse) ProtoMessage() {}

func (x *ListBeatsGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeatsGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListBeatsGroupsResponse) Descriptor() ([]byte, []int) {
	return file_proto_story_structure_stc_beats_group_proto_rawDescGZIP(), []int{6}
}

func (x *ListBeatsGroupsResponse) GetBeatsGroups() []*BeatsGroup {
	if x != nil {
		return x.BeatsGroups
	}
	return nil
}

type SearchBeatsGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ids of the beats groups matching the search. Details for each beats group can be retrieved using ListBeatsGroups,
	// or separately using GetBeatsGroup.
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SearchBeatsGroupsResponse) Reset() {
	*x = SearchBeatsGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchBeatsGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBeatsGroupsResponse) ProtoMessage() {}

func (x *SearchBeatsGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBeatsGroupsResponse.ProtoReflect.Descriptor instead.
func (*SearchBeatsGroupsResponse) Descriptor() ([]byte, []int) {
	return file_proto_story_structure_stc_beats_group_proto_rawDescGZIP(), []int{7}
}

func (x *SearchBeatsGroupsResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type BeatsGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier of the beats group.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the beats group.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *BeatsGroup) Reset() {
	*x = BeatsGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeatsGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeatsGroup) ProtoMessage() {}

func (x *BeatsGroup) ProtoReflect() protoreflect.Message {
	mi := &file_proto_story_structure_stc_beats_group_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeatsGroup.ProtoReflect.Descriptor instead.
func (*BeatsGroup) Descriptor() ([]byte, []int) {
	return file_proto_story_structure_stc_beats_group_proto_rawDescGZIP(), []int{8}
}

func (x *BeatsGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BeatsGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_proto_story_structure_stc_beats_group_proto protoreflect.FileDescriptor

var file_proto_story_structure_stc_beats_group_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2d, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x73, 0x74, 0x63, 0x5f, 0x62, 0x65, 0x61, 0x74,
	0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x65, 0x61, 0x74,
	0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x48, 0x0a, 0x18, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0x2d, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x61,
	0x74, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x61, 0x74,
	0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x65, 0x61, 0x74, 0x73,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x62, 0x65, 0x61, 0x74, 0x73,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x62, 0x65, 0x61, 0x74, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x22, 0x2d, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x65, 0x61, 0x74, 0x73,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0x30, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x32, 0x90, 0x04, 0x0a, 0x11, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42,
	0x65, 0x61, 0x74, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x61, 0x74, 0x73,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x60, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x65, 0x61, 0x74,
	0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x61, 0x74, 0x73,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x22, 0x00, 0x12, 0x4f, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x61, 0x74,
	0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x65, 0x61,
	0x74, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x65, 0x61, 0x74, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x2b, 0x5a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67,
	0x6f, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2d, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x3b, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_story_structure_stc_beats_group_proto_rawDescOnce sync.Once
	file_proto_story_structure_stc_beats_group_proto_rawDescData = file_proto_story_structure_stc_beats_group_proto_rawDesc
)

func file_proto_story_structure_stc_beats_group_proto_rawDescGZIP() []byte {
	file_proto_story_structure_stc_beats_group_proto_rawDescOnce.Do(func() {
		file_proto_story_structure_stc_beats_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_story_structure_stc_beats_group_proto_rawDescData)
	})
	return file_proto_story_structure_stc_beats_group_proto_rawDescData
}

var file_proto_story_structure_stc_beats_group_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_story_structure_stc_beats_group_proto_goTypes = []any{
	(*GetBeatsGroupRequest)(nil),      // 0: structure.GetBeatsGroupRequest
	(*ListBeatsGroupsRequest)(nil),    // 1: structure.ListBeatsGroupsRequest
	(*SearchBeatsGroupsRequest)(nil),  // 2: structure.SearchBeatsGroupsRequest
	(*CreateBeatsGroupRequest)(nil),   // 3: structure.CreateBeatsGroupRequest
	(*UpdateBeatsGroupRequest)(nil),   // 4: structure.UpdateBeatsGroupRequest
	(*DeleteBeatsGroupRequest)(nil),   // 5: structure.DeleteBeatsGroupRequest
	(*ListBeatsGroupsResponse)(nil),   // 6: structure.ListBeatsGroupsResponse
	(*SearchBeatsGroupsResponse)(nil), // 7: structure.SearchBeatsGroupsResponse
	(*BeatsGroup)(nil),                // 8: structure.BeatsGroup
	(*emptypb.Empty)(nil),             // 9: google.protobuf.Empty
}
var file_proto_story_structure_stc_beats_group_proto_depIdxs = []int32{
	8, // 0: structure.ListBeatsGroupsResponse.beats_groups:type_name -> structure.BeatsGroup
	0, // 1: structure.BeatsGroupService.GetBeatsGroup:input_type -> structure.GetBeatsGroupRequest
	1, // 2: structure.BeatsGroupService.ListBeatsGroups:input_type -> structure.ListBeatsGroupsRequest
	2, // 3: structure.BeatsGroupService.SearchBeatsGroups:input_type -> structure.SearchBeatsGroupsRequest
	3, // 4: structure.BeatsGroupService.CreateBeatsGroup:input_type -> structure.CreateBeatsGroupRequest
	4, // 5: structure.BeatsGroupService.UpdateBeatsGroup:input_type -> structure.UpdateBeatsGroupRequest
	5, // 6: structure.BeatsGroupService.DeleteBeatsGroup:input_type -> structure.DeleteBeatsGroupRequest
	8, // 7: structure.BeatsGroupService.GetBeatsGroup:output_type -> structure.BeatsGroup
	6, // 8: structure.BeatsGroupService.ListBeatsGroups:output_type -> structure.ListBeatsGroupsResponse
	7, // 9: structure.BeatsGroupService.SearchBeatsGroups:output_type -> structure.SearchBeatsGroupsResponse
	8, // 10: structure.BeatsGroupService.CreateBeatsGroup:output_type -> structure.BeatsGroup
	8, // 11: structure.BeatsGroupService.UpdateBeatsGroup:output_type -> structure.BeatsGroup
	9, // 12: structure.BeatsGroupService.DeleteBeatsGroup:output_type -> google.protobuf.Empty
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_story_structure_stc_beats_group_proto_init() }
func file_proto_story_structure_stc_beats_group_proto_init() {
	if File_proto_story_structure_stc_beats_group_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_story_structure_stc_beats_group_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetBeatsGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_story_structure_stc_beats_group_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListBeatsGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_story_structure_stc_beats_group_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SearchBeatsGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_story_structure_stc_beats_group_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreateBeatsGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_story_structure_stc_beats_group_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateBeatsGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_story_structure_stc_beats_group_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteBeatsGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_story_structure_stc_beats_group_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListBeatsGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_story_structure_stc_beats_group_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SearchBeatsGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_story_structure_stc_beats_group_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*BeatsGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_story_structure_stc_beats_group_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_story_structure_stc_beats_group_proto_goTypes,
		DependencyIndexes: file_proto_story_structure_stc_beats_group_proto_depIdxs,
		MessageInfos:      file_proto_story_structure_stc_beats_group_proto_msgTypes,
	}.Build()
	File_proto_story_structure_stc_beats_group_proto = out.File
	file_proto_story_structure_stc_beats_group_proto_rawDesc = nil
	file_proto_story_structure_stc_beats_group_proto_goTypes = nil
	file_proto_story_structure_stc_beats_group_proto_depIdxs = nil
}
